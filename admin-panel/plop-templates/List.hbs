'use client'

import { useQuery } from '@tanstack/react-query'
import { useContext } from 'react'
import { AbilityContext } from '@/lib/AbilityProvider'
import { {{camelCase name}}Api } from './useApi'
import type { {{pascalCase name}} } from '@/types/{{lowerCase name}}'

export default function {{pascalCase name}}List() {
  const ability = useContext(AbilityContext)

  const { data, isLoading } = useQuery<{ docs: {{pascalCase name}}[] }>({
    queryKey: ['{{lowerCase name}}s'],
    queryFn: {{camelCase name}}Api.list,
  })

  if (!ability.can('read', '{{pascalCase name}}')) return <p>Access denied</p>
  if (isLoading) return <p>Loading...</p>

  return (
    <ul>
      {data?.docs?.map((item) => (
        <li key={item.id}>
          <strong>{item.email}</strong> â€“ {item.role}
        </li>
      ))}
    </ul>
  )
}
